{"version":3,"sources":["header/oncology_white.png","card/card.tsx","mapContainer.tsx","fruit-loops.tsx","header/header.tsx","enum-view.ts","category-menu.tsx","category1.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","CardComponent","props","className","src","item","alt","title","description","dir","open","telephone","web","containerStyle","width","height","margin","center","lat","lng","MyComponent","React","useState","setMap","onLoad","useCallback","map","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","googleMapsApiKey","mapContainerStyle","zoom","FruitLoops","list","value","index","key","Header","View","logo","CategoryMenu","Navbar","collapseOnSelect","expand","Toggle","aria-controls","Collapse","id","Nav","Link","href","onClick","callback","Home","NavDropdown","Item","Divider","Category","App","listCard","i","push","Math","floor","random","length","view","setView","Category1","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aeff059b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oncology_white.4554c001.png\";","import React from 'react';\r\nimport { Card } from '../card-props';\r\nimport { GeoAlt, TelephoneFill, Clock, Globe } from 'react-bootstrap-icons';\r\n\r\ntype CardProps = {\r\n    item: Card\r\n}\r\n\r\nfunction CardComponent(props: CardProps) {\r\n    return (\r\n        /*<div className=\"card\">\r\n            <img src={props.src} alt=\"\" ></img>\r\n            <h1>{props.title}</h1>\r\n\r\n        </div>*/\r\n\r\n        <div className=\"card\">\r\n            <img className=\"card-img-top\" src={props.item.src} alt=\"Card image cap\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{props.item.title}</h5>\r\n\r\n\r\n                <span className=\"fa fa-star checked\"></span>\r\n                <span className=\"fa fa-star checked\"></span>\r\n                <span className=\"fa fa-star checked\"></span>\r\n                <span className=\"fa fa-star checked\"></span>\r\n                <span className=\"fa fa-star\"></span>\r\n\r\n\r\n                <p className=\"card-text my-4\">{props.item.description}</p>\r\n\r\n                <div className=\"text-left\">\r\n                    <p className=\"card-text\">\r\n                        <GeoAlt />\r\n                        <small className=\"text-muted\"> {props.item.dir}</small>\r\n                    </p>\r\n\r\n                    <p className=\"card-text\">\r\n                        <Clock />\r\n                        <small className=\"text-muted\"> Opens at: {props.item.open}</small>\r\n                    </p>\r\n\r\n                    <p className=\"card-text\">\r\n                        <TelephoneFill />\r\n                        <small className=\"text-muted\"> {props.item.telephone}</small>\r\n                    </p>\r\n\r\n                    <p className=\"card-text\">\r\n                        <Globe />\r\n                        <small className=\"text-muted\"> {props.item.web}</small>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent;","import React from 'react'\r\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n    width: '400px',\r\n    height: '400px',\r\n    margin: 'auto'\r\n};\r\n\r\nconst center = { lat: -25.363, lng: 131.044 };\r\n\r\nfunction MyComponent() {\r\n    const [map, setMap] = React.useState(null)\r\n\r\n    const onLoad = React.useCallback(function callback(map) {\r\n        const bounds = new window.google.maps.LatLngBounds();\r\n        map.fitBounds(bounds);\r\n        setMap(map)\r\n    }, [])\r\n\r\n    const onUnmount = React.useCallback(function callback(map) {\r\n        setMap(null)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"maps\">\r\n            <LoadScript\r\n                googleMapsApiKey=\"AIzaSyACEs55dRnpO4FxiIFHK4J6t63FFg-iATI\"\r\n            >\r\n                <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={center}\r\n                    zoom={10}\r\n                    onLoad={onLoad}\r\n                    onUnmount={onUnmount}\r\n                >\r\n                    { /* Child components, such as markers, info windows, etc. */}\r\n                    <></>\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n    )\r\n}\r\n\r\n//export default React.memo(MyComponent)\r\nexport default MyComponent;","import React from 'react';\r\nimport CardComponent from './card/card';\r\nimport { GoogleApiWrapper } from 'google-maps-react';\r\nimport MyComponent from './mapContainer';\r\n\r\ntype FruitLoopsProps = {\r\n    list: Array<any>\r\n}\r\n\r\nfunction FruitLoops(props: FruitLoopsProps) {\r\n    return (\r\n        <div>\r\n            <div className=\"d-none d-lg-block\">\r\n                <MyComponent />\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n                {props.list.map((value, index) => {\r\n                    return <CardComponent item={value} key={index}></CardComponent>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FruitLoops;","import React from 'react';\r\nimport logo from './oncology_white.png';\r\nimport './_header.scss';\r\nimport { FaTwitter, FaLinkedin, FaYoutube, FaGoogle } from 'react-icons/fa'\r\nfunction Header() {\r\n    return (\r\n        <div className=\"backgroundBlue\">\r\n            <div className=\"header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <h1>OncoAid</h1>\r\n\r\n                <div className=\"float-right social-icons d-none d-lg-block\">\r\n                    <FaGoogle></FaGoogle>\r\n                    <FaLinkedin></FaLinkedin>\r\n                    <FaTwitter></FaTwitter>\r\n                    <FaYoutube></FaYoutube>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","export enum View {\r\n    Home,\r\n    Category1\r\n}","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { View } from './enum-view';\r\n\r\ntype MenuProps = {\r\n  callback: any\r\n}\r\n\r\nconst CategoryMenu = (props: MenuProps) => {\r\n  return (\r\n    <Navbar className=\"categoryMenu \" collapseOnSelect expand=\"lg\">\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"m-auto\">\r\n          <Nav.Link href=\"#home\" onClick={() => props.callback(View.Home)} >Home</Nav.Link>\r\n          <Nav.Link href=\"#nosaltres\">Nosaltres</Nav.Link>\r\n          <Nav.Link href=\"#wigshops\" onClick={() => props.callback(View.Home)}>\r\n            <NavDropdown title=\"Wig Shops\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#contruction\" onClick={() => props.callback(View.Home)}>Construction & Adaptation</Nav.Link>\r\n          <Nav.Link href=\"#nutrition\">Nutrition Centers</Nav.Link>\r\n          <Nav.Link href=\"#oncology\">Psycho Oncology</Nav.Link>\r\n          <Nav.Link href=\"#discounts\">Discounts</Nav.Link>\r\n          <Nav.Link href=\"#contact\">Contact us</Nav.Link>\r\n\r\n\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n\r\n  )\r\n}\r\n\r\nexport default CategoryMenu;","import React from 'react';\r\n\r\nfunction Category() {\r\n    const opcions = [\"Informació\", \"Suport\", \"Treball social\", \"Atenció\", \"Assessorament\", \"Estètica\", \"Teràpia\", \"Orientació\", \"Préstec\", \"Clínica\", \"Coixí\"];\r\n    return (\r\n        <div className=\"category row\">\r\n            {opcions.map((value, index) => {\r\n                return <a href='# ' className=\"col-6 btn categoryButton\">★ {value}</a>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category;","import React, { Fragment } from 'react';\nimport FruitLoops from './fruit-loops';\nimport Header from './header/header';\nimport { Card } from './card-props';\nimport CategoryMenu from './category-menu';\nimport { View } from './enum-view';\nimport Category from './category1';\nimport './_App.scss';\n\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/esm/Navbar';\nimport CustomDate from './custom-date';\n\n\nfunction App() {\n  const card1 = {\n    src: \"https://www.eltriangle.es/wp-content/uploads/tea-shop-tienda-el-triangle-1.jpg\",\n    title: \"TEA SHOP\", description: \"Soporte de ayuda para el retrete...\", dir: \"CC La Maquinista, Carrer de Potosí, 08030 Barcelona\", \n    telephone: \"93345875\", open: \"9:30 AM\", web: \"www.teashop.com\"\n  };\n  const card2 = {\n    src: \"https://www.reasonwhy.es/sites/default/files/the_body_shop_contrata_personal.jpg\",\n    title: \"The Body Shop\", description: \"Las Pelucas de color fantasía son un ...\", dir: \"Passeig de Maragall, 241, 08032 Barcelona\",\n     telephone: \"936543646\", open: \"8:00 AM\", web:\"www.thebodyshop.es\"\n  };\n  const card3 = {\n    src: \"https://cclaljub.com/wp-content/uploads/2019/05/tea-shop.jpg\",\n    title: \"ExpressDutty\", description: \"Helper safe grip bathtub and shower assist bar\", dir: \"Carrer del Cardenal Tedeschini, 32, 08027 Barcelona\", \n    telephone: \"936503123\", open: \"9:00 AM\", web: \"www.expressdutty.cat\"\n  };\n\n  const listCard = [card1, card2, card3];\n  const list: Array<Card> = [];\n\n  const n = 10;\n  for (let i = 0; i < n; i++)\n    list.push(listCard[Math.floor(Math.random() * listCard.length)]);\n\n  let [view, setView] = React.useState(View.Home);\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <CategoryMenu callback={setView}></CategoryMenu>\n\n\n      {view === View.Home && (\n        <FruitLoops list={list}></FruitLoops>\n      )}\n\n      {view === View.Category1 && (\n        <Category></Category>\n      )}\n\n\n      {/*<Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path=\"/\" component={Category}></Route>\n          <section className=\"container\">\n            <Switch>\n              <Route exact path =\"/1\" component={Category}></Route>\n              <Route exact path =\"/2\" component={Category}></Route>\n            </Switch>\n          </section>\n\n        </Fragment>\n      </Router>*/}\n\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './_index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}